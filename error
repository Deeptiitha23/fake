pipeline {
    agent any

    tools {
        // Define Ansible tool installation
        ansible 'ansible'

        // Define Terraform tool installation
        terraform 'terraform'
    }

    stages {
        stage('Clone Repositories') {
            steps {
                git branch: 'main', url: 'https://github.com/Deeptiitha23/terraform-3315.git'
                git branch: 'main', url: 'https://github.com/Deeptiitha23/ansible.git'
            }
        }

        stage('Terraform Apply') {
            steps {
                script {
                    sh 'terraform init'
                    sh 'terraform apply -auto-approve'
                }
            }
        }

        stage('Update Ansible Inventory') {
            steps {
                script {
                    def privateIps = sh(script: "terraform output -json private_ips", returnStdout: true).trim()
                    def ips = readJSON(text: privateIps)

                    writeFile file: "inventory.ini", text: generateInventory(ips)
                }
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                script {
                    sh 'ansible-playbook -i inventory.ini playbook.yml'
                }
            }
        }
    }
}

def generateInventory(privateIps) {
    def engine = new groovy.text.SimpleTemplateEngine()
    def template = new File("inventory.ini").text
    def binding = [private_ips: privateIps]
    return engine.createTemplate(template).make(binding).toString()
}
